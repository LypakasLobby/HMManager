# Whirlpool, as you can probably imagine, is not really visually possible with Minecraft's water physics
# I could - in theory - make it with just a teleport and location check, but that seems kinda dumb when you could just AreaManager enter/leave permission that for the same effect

# General settings for HM Cut
Cut {
  # A list of supported block IDs for Cut trees
  # You could do vanilla trees or modded trees if you don't like Pixelmon's tree blocks
  # The way it works is: "player clicks on block, if block is Cut tree, if player has permission, teleports player"
  # Checks player's X and Z coordinates to determine where to teleport to
  Block-IDs=[
    "pixelmon:tree"
  ]
  # Creates a file in "/config/hmmanager/<regionName>/Cut/<name>.conf" auto pulling every region defined in AreaManager's config
  # Inside this file is where you'll tell HMManager where this Cut tree is, where to teleport players to and from, etc etc
  Files=[]
  # Various messages
  Messages {
    # Sets the message sent to players when they don't have permission to use the move
    # Can set to "" to disable
    No-Permission="&eA Pokemon may be able to Cut this tree down..."
    # Sets the message sent to players when the move is used
    # Can set to "" to disable
    # This default message format requires "Require-Move" be set to true, so that it can pull the Pokemon "using" the move's name to input into the message
    Use="&e%pokemon% used Cut!"
  }
  # Sets the universal permission needed to use Cut. This permission by default will input the region name (manually coded into lowercase form) into the permission
  # So, an example, would be like "kanto.cut" to use Cut on a tree that's located in a region named "Kanto"
  Permission="%region%.cut"
  # If true, it will require the player to have a Pokemon in their party that knows the move Cut before allowing them to use the move, even if they have the permission to do so
  # I recommend keeping this set to true for the most authentic, true-to-the-games experience, but I made it configurable for those servers that like spoon-feeding their players
  Require-Move=true
}
# General settings for HM Defog
Defog {
  # Creates a file in "/config/hmmanager/<regionName>/Defog/<name>.conf" auto pulling every region defined in AreaManager's config
  # Inside this file is where you'll tell HMManager where this Defog spot is
  # The way that is works is: "player enters Defog area, player gets blindness effect, player types "/hm defog", if has permission, clears blindness"
  Files=[]
  # Various messages
  Messages {
    # Sets the message sent to players when they don't have permission to use the move
    # Can set to "" to disable
    No-Permission="&eA Pokemon may be able to blow this dense fog away..."
    # Sets the message sent to players when the move is used
    # Can set to "" to disable
    # This default message format requires "Require-Move" be set to true, so that it can pull the Pokemon "using" the move's name to input into the message
    Use="&e%pokemon% used Defog!"
  }
  # Sets the universal permission needed to use Defog. This permission by default will input the region name (manually coded into lowercase form) into the permission
  # So, an example, would be like "sinnoh.defog" to use Defog on a spot that's located in a region named "Sinnoh"
  Permission="%region%.defog"
  # If true, it will require the player to have a Pokemon in their party that knows the move Defog before allowing them to use the move, even if they have the permission to do so
  # I recommend keeping this set to true for the most authentic, true-to-the-games experience, but I made it configurable for those servers that like spoon-feeding their players
  Require-Move=true
}
# General settings for HM Dive
Dive {
  # A list of supported block IDs for Dive spots
  # The way it works is: "player is in water, player is standing on block, if block ID in this list, player can click on block, if player has permission, teleports player"
  Block-IDs=[
    "minecraft:blue_terracotta",
    "minecraft:light_blue_terracotta",
    "minecraft:sand" # sand is typically the block used in the underwater areas to indicate the "coming back up" spots in the games
  ]
  # Creates a file in "/config/hmmanager/<regionName>/Dive/<name>.conf" auto pulling every region defined in AreaManager's config
  # Inside this file is where you'll tell HMManager where this Dive spot is, where to teleport players to and from, etc etc
  Files=[]
  # Various messages
  Messages {
    # Sets the message sent to players when they don't have permission to use the move
    # Can set to "" to disable
    No-Permission="&eA Pokemon may be able to Dive down here..."
    # Sets the message sent to players when the move is used
    # Can set to "" to disable
    # This default message format requires "Require-Move" be set to true, so that it can pull the Pokemon "using" the move's name to input into the message
    Use="&e%pokemon% used Dive!"
  }
  # Sets the universal permission needed to use Dive. This permission by default will input the region name (manually coded into lowercase form) into the permission
  # So, an example, would be like "hoenn.dive" to use Dive on a spot that's located in a region named "Hoenn"
  Permission="%region%.dive"
  # If true, it will require the player to have a Pokemon in their party that knows the move Dive before allowing them to use the move, even if they have the permission to do so
  # I recommend keeping this set to true for the most authentic, true-to-the-games experience, but I made it configurable for those servers that like spoon-feeding their players
  Require-Move=true
  # If true, players will be force-mounted on the Pokemon in their party using Dive (requires "Require-Move" being set to true) while in the underwater areas
  # The mod will automatically (TEMPORARILY) change the size (growth) of the Pokemon to something small, so them moving around on like a Ginormous Wailord isn't an issue to others
  Ride-Pokemon=true
}
# General settings for HM Flash
Flash {
  # Creates a file in "/config/hmmanager/<regionName>/Flash/<name>.conf" auto pulling every region defined in AreaManager's config
  # Inside this file is where you'll tell HMManager where this Flash spot is
  # The way that it works is: "player enters Flash area (I recommend building these kinda dark), player types "/hm flash", if has permission, gives night vision
  # Auto removes the night vision when player leaves Flash area
  Files=[]
  # Various messages
  Messages {
    # Sets the message sent to players when they don't have permission to use the move
    # Can set to "" to disable
    No-Permission="&eA Pokemon may be able to illuminate this dark area..."
    # Sets the message sent to players when the move is used
    # Can set to "" to disable
    # This default message format requires "Require-Move" be set to true, so that it can pull the Pokemon "using" the move's name to input into the message
    Use="&e%pokemon% used Flash!"
  }
  # Sets the universal permission needed to use Flash. This permission by default will input the region name (manually coded into lowercase form) into the permission
  # So, an example, would be like "kanto.flash" to use Flash on a spot that's located in a region named "Kanto"
  Permission="%region%.flash"
  # If true, it will require the player to have a Pokemon in their party that knows the move Flash before allowing them to use the move, even if they have the permission to do so
  # I recommend keeping this set to true for the most authentic, true-to-the-games experience, but I made it configurable for those servers that like spoon-feeding their players
  Require-Move=true
}
# General settings for HM Fly
# Fly has a GUI that players can open using "/hm fly <region>" where they can click on configurable display items in the GUI to teleport to any unlocked Fly location
Fly {
  # Creates a file in "/config/hmmanager/<regionName>/Fly/<name>.conf" auto pulling every region defined in AreaManager's config
  # Inside this file is where you'll tell HMManager where the healer and/or Doctor NPC is for each Fly location
  # As players click on the block/NPC for that Fly location, they will unlock that location by assigning them a permission node "<regionName>.<flyLocation>"
  Files=[]
  # Various messages
  Messages {
    # Sets the message sent to players when they don't have permission to use the move
    # Can set to "" to disable
    No-Permission="&eI can't think of a creative foreshadowing message for this HM so...no flappy flappy!"
    # Sets the message sent to players when the move is used
    # Can set to "" to disable
    # This default message format requires "Require-Move" be set to true, so that it can pull the Pokemon "using" the move's name to input into the message
    Use="&e%pokemon% used Fly!"
  }
  # Sets the universal permission needed to use Fly. This permission by default will input the region name (manually coded into lowercase form) into the permission
  # So, an example, would be like "hoenn.fly" to use the "/hm fly" command in a region named "Hoenn"
  Permission="%region%.fly"
  # If true, it will require the player to have a Pokemon in their party that knows the move Fly before allowing them to use the move, even if they have the permission to do so
  # I recommend keeping this set to true for the most authentic, true-to-the-games experience, but I made it configurable for those servers that like spoon-feeding their players
  Require-Move=true
}
# General settings for HM Rock Climb
Rock-Climb {
  # A list of supported block IDs for Rock Climb spots
  # The way it works is: "player clicks on block, if Rock Climb block, if has permission, teleports"
  # If player somehow (depending on how its built) steps on a Rock Climb block, they will be auto teleported "back"
  # Checks player's X and Z coordinates to determine where to teleport to
  Block-IDs=[
    "pixelmon:rock",
    "pixelmon:hidden_cube", # so that if you have a 1 block tall rock, players can click on the invisible block above it that's there to prevent them from jumping over it
    "minecraft:barrier" # so that if you have a 1 block tall rock, players can click on the invisible block above it that's there to prevent them from jumping over it
  ]
  # Creates a file in "/config/hmmanager/<regionName>/Rock Climb/<name>.conf" auto pulling every region defined in AreaManager's config
  # Inside this file is where you'll tell HMManager where this Rock Climb spot is, where to teleport players to and from, etc etc
  Files=[]
  # Various messages
  Messages {
    # Sets the message sent to players when they don't have permission to use the move
    # Can set to "" to disable
    No-Permission="&eA Pokemon may be able to climb this rocky slope..."
    # Sets the message sent to players when the move is used
    # Can set to "" to disable
    # This default message format requires "Require-Move" be set to true, so that it can pull the Pokemon "using" the move's name to input into the message
    Use="&e%pokemon% used Rock Climb!"
  }
  # Sets the universal permission needed to use Rock Climb. This permission by default will input the region name (manually coded into lowercase form) into the permission
  # So, an example, would be like "sinnoh.rockclimb" to use Rock Climb on a spot that's located in a region named "Sinnoh"
  Permission="%region%.rockclimb"
  # If true, it will require the player to have a Pokemon in their party that knows the move Rock Climb before allowing them to use the move, even if they have the permission to do so
  # I recommend keeping this set to true for the most authentic, true-to-the-games experience, but I made it configurable for those servers that like spoon-feeding their players
  Require-Move=true
}
# General settings for HM Rock Smash
# As a pre-head's up, you can use SpawnManager's Rock Smash spawner with this to have a chance to have a Pokemon spawn on the use of Rock Smash
# This spawn attempt is made BEFORE the player gets teleported
Rock-Smash {
  # A list of supported block IDs for Rock Smash spots
  # The way it works is: "player clicks on block, if Rock Smash block, if has permission, teleports"
  # Checks player's X and Z coordinates to determine where to teleport to
  Block-IDs=[
    "pixelmon:boulder",
    "pixelmon:hidden_cube", # so that if you have a 1 block tall rock, players can click on the invisible block above it that's there to prevent them from jumping over it
    "minecraft:barrier" # so that if you have a 1 block tall rock, players can click on the invisible block above it that's there to prevent them from jumping over it
  ]
  # Creates a file in "/config/hmmanager/<regionName>/Rock Smash/<name>.conf" auto pulling every region defined in AreaManager's config
  # Inside this file is where you'll tell HMManager where this Rock Smash spot is, where to teleport players to and from, etc etc
  Files=[]
  # Various messages
  Messages {
    # Sets the message sent to players when they don't have permission to use the move
    # Can set to "" to disable
    No-Permission="&eA Pokemon may be able to smash this rock out of the way..."
    # Sets the message sent to players when the move is used
    # Can set to "" to disable
    # This default message format requires "Require-Move" be set to true, so that it can pull the Pokemon "using" the move's name to input into the message
    Use="&e%pokemon% used Rock Smash!"
  }
  # Sets the universal permission needed to use Rock Smash. This permission by default will input the region name (manually coded into lowercase form) into the permission
  # So, an example, would be like "kanto.rocksmash" to use Rock Smash on a spot that's located in a region named "Kanto"
  Permission="%region%.rocksmash"
  # If true, it will require the player to have a Pokemon in their party that knows the move Rock Smash before allowing them to use the move, even if they have the permission to do so
  # I recommend keeping this set to true for the most authentic, true-to-the-games experience, but I made it configurable for those servers that like spoon-feeding their players
  Require-Move=true
}
# General settings for HM Strength
Strength {
  # A list of supported block IDs for Strength spots
  # The way it works is: "player clicks on block, if Strength block, if has permission, teleports"
  # Checks player's X and Z coordinates to determine where to teleport to
  Block-IDs=[
    "pixelmon:cave_rock",
    "pixelmon:hidden_cube", # so that if you have a 1 block tall rock, players can click on the invisible block above it that's there to prevent them from jumping over it
    "minecraft:barrier" # so that if you have a 1 block tall rock, players can click on the invisible block above it that's there to prevent them from jumping over it
  ]
  # Creates a file in "/config/hmmanager/<regionName>/Strength/<name>.conf" auto pulling every region defined in AreaManager's config
  # Inside this file is where you'll tell HMManager where this Strength spot is, where to teleport players to and from, etc etc
  Files=[]
  # Various messages
  Messages {
    # Sets the message sent to players when they don't have permission to use the move
    # Can set to "" to disable
    No-Permission="&eA Pokemon may be able to use its Strength to push this rock out of the way..."
    # Sets the message sent to players when the move is used
    # Can set to "" to disable
    # This default message format requires "Require-Move" be set to true, so that it can pull the Pokemon "using" the move's name to input into the message
    Use="&e%pokemon% used Strength!"
  }
  # Sets the universal permission needed to use Strength. This permission by default will input the region name (manually coded into lowercase form) into the permission
  # So, an example, would be like "kanto.strength" to use Strength on a spot that's located in a region named "Kanto"
  Permission="%region%.strength"
  # If true, it will require the player to have a Pokemon in their party that knows the move Strength before allowing them to use the move, even if they have the permission to do so
  # I recommend keeping this set to true for the most authentic, true-to-the-games experience, but I made it configurable for those servers that like spoon-feeding their players
  Require-Move=true
}
# General settings for HM Surf
# This works with AreaManager's anti-swim code
# HMManager will check for if the area is a Surf area first, if player doesn't have permission to use Surf then it will execute AreaManager's anti-swim code that's set to for this area if any
Surf {
  # A list of supported block IDs for Surf areas
  # The way it works is: "player clicks on block, if Surf block, if has permission, mounts player on Pokemon (if "Ride-Pokemon"=true) and teleports on to the water"
  # If player (or player mounted on a Pokemon) enters this area without the permission (or doesn't have a Pokemon with the move if "Require-Move"=true) it will
  #     auto teleport the player back to their last known land location and send the "No-Permission" message if one is set
  Block-IDs=[
    "minecraft:sand", # for your ocean floors
    "minecraft:water"
  ]
  # Creates a file in "/config/hmmanager/<regionName>/Surf/<name>.conf" auto pulling every region defined in AreaManager's config
  # Inside this file is where you'll tell HMManager where this Surf spot is, where to teleport players to and from, etc etc
  Files=[]
  # Various messages
  Messages {
    # Sets the message sent to players when they don't have permission to use the move
    # Can set to "" to disable
    No-Permission="&eA Pokemon may be able to carry you across this body of water..."
    # Sets the message sent to players when the move is used
    # This default message format requires "Require-Move" be set to true, so that it can pull the Pokemon "using" the move's name to input into the message
    # Can set to "" to disable
    Use="&e%pokemon% used Surf!"
  }
  # Sets the universal permission needed to use Surf. This permission by default will input the region name (manually coded into lowercase form) into the permission
  # So, an example, would be like "kanto.surf" to use Surf on a spot that's located in a region named "Kanto"
  Permission="%region%.surf"
  # If true, it will require the player to have a Pokemon in their party that knows the move Surf before allowing them to use the move, even if they have the permission to do so
  # I recommend keeping this set to true for the most authentic, true-to-the-games experience, but I made it configurable for those servers that like spoon-feeding their players
  Require-Move=true
  # If true, players will be force-mounted on the Pokemon in their party using Surf (requires "Require-Move" being set to true) while in the water areas
  # The mod will automatically (TEMPORARILY) change the size (growth) of the Pokemon to something small, so them moving around on like a Ginormous Wailord isn't an issue to others
  Ride-Pokemon=true
}
# General settings for HM Waterfall
Waterfall {
  # A list of supported block IDs for Surf areas
  # The way it works is: "player clicks on block, if Waterfall block, if has permission, teleports player (and Pokemon if player is mounted)"
  # For that reason, I personally recommend building your Waterfall areas with barrier block and/or hidden cube block barrier walls to prevent the player from just swimming up them
  # Requiring them to have to click a block to use Waterfall
  # Checking vertical velocity is just...I don't wanna do it, so this is how I'm making Waterfall (not to mention you have to click on the waterfalls in the games so yeah!)
  Block-IDs=[
    "pixelmon:hidden_cube",
    "minecraft:barrier"
  ]
  # Creates a file in "/config/hmmanager/<regionName>/Waterfall/<name>.conf" auto pulling every region defined in AreaManager's config
  # Inside this file is where you'll tell HMManager where this Waterfall spot is, where to teleport players to and from, etc etc
  Files=[]
  # Various messages
  Messages {
    # Sets the message sent to players when they don't have permission to use the move
    # Can set to "" to disable
    No-Permission="&eA Pokemon may be able to carry you up this Waterfall..."
    # Sets the message sent to players when the move is used
    # This default message format requires "Require-Move" be set to true, so that it can pull the Pokemon "using" the move's name to input into the message
    # Can set to "" to disable
    Use="&e%pokemon% used Waterfall!"
  }
  # Sets the universal permission needed to use Waterfall. This permission by default will input the region name (manually coded into lowercase form) into the permission
  # So, an example, would be like "kanto.waterfall" to use Waterfall on a spot that's located in a region named "Kanto"
  Permission="%region%.waterfall"
  # If true, it will require the player to have a Pokemon in their party that knows the move Waterfall before allowing them to use the move, even if they have the permission to do so
  # I recommend keeping this set to true for the most authentic, true-to-the-games experience, but I made it configurable for those servers that like spoon-feeding their players
  Require-Move=true
}